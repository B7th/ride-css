// Ride css. Released under MIT licence.
// https://github.com/OctoD/ride-css/
// ride column grid
// options passed as an [object Object]
ride-grid(columns, gutter = 0, padding = 0, config = {})
  config.column = config.column || '.cl'
  config.float = config.float || '.float'
  config.push = config.push || '.push'
  config.scope = config.scope || ''
  mygrid = getGrid(100, columns, toArray(s('%s', gutter)), toArray(s('%s', padding)))
  
  for col, colName in mygrid.cols
    {config.scope} {config.column}{colName + 1}
      width unit(col, '%')
  for float, floatName in mygrid.floats
    {config.scope} {config.float}{floatName + 1}
      margin-left unit(float, '%')
  for push, pushName in mygrid.floats
    {config.scope} {config.push}{pushName + 1}
      margin-right unit(push, '%')
  for col, colName in mygrid.cols
    {config.scope} {config.column}{colName + 1}
      +cache('grid-float')
        float left
        margin setUnit(gutter, '%')
        padding setUnit(padding, '%')

  {config.scope} {config.column}{columns}
    float none

// twelve columns grid
ride-grid-12(gutter = (0 2), gridGutter = (0 2), gridWidth = 100%, padding = false, gutterType = 'margin')
  options = {}
  options.gridClass = '.ride-grid-12'
  options.gutter = gutter
  options.gutterType = gutterType
  options.gridGutter = gridGutter
  options.width = gridWidth
  options.padding = padding
  ride-grid(options)

// six columns grid (ideal for mobile use)
ride-grid-12-small(gutter = (0 2), gridGutter = (0 2), gridWidth = 100%, padding = false, gutterType = 'margin')
  options = {}
  options.columnClass = '.sm-cl'
  options.floatClass = '.sm-float'
  options.pushClass = '.sm-push'
  options.columns = 6
  options.columnScope = 'body'
  options.floatScope = 'html body'
  options.gridClass = '.ride-grid-12'
  options.gutter = gutter
  options.gutterType = gutterType
  options.gridGutter = gridGutter
  options.width = gridWidth
  options.padding = padding
  ride-grid(options)

// four columns grid (ideal for mobile use)
ride-grid-12-smallest(gutter = (0 2), gridGutter = (0 2), gridWidth = 100%, padding = false, gutterType = 'margin')
  options = {}
  options.columnClass = '.smt-cl'
  options.floatClass = '.smt-float'
  options.pushClass = '.smt-push'
  options.columns = 4
  options.columnScope = 'body'
  options.floatScope = 'html body'
  options.gridClass = '.ride-grid-12'
  options.gutter = gutter
  options.gutterType = gutterType
  options.gridGutter = gridGutter
  options.width = gridWidth
  options.padding = padding
  ride-grid(options)

// twelve columns grid reset. Ideal for smaller devices
ride-grid-12-reset(gutter = 2, gridWidth = 100%, gutterType = 'both')
  .ride-grid-12
    margin 0 2%
    width 96%
    [class*="cl"]
    [class*="cl"][class*="float"]
    [class*="cl"][class*="push"]
      ride-column(100%, gutter, 1, 1, gutterType)

// two columns grid. Ideal for "app style" designs
ride-two-columns(class = '.site-nav', contentClass = '.site-content', hideNav = '.hide-nav', contentWidth = 61.8, navPosition = left, gridGutter = 0 2, width = 100%, options = {})
  // the nav will have this width! 
  smallColumn = parseFloat(100 - contentWidth)
  // nav class
  {class}
    a
      display block
    ride-column(width: width, columnCount: 100, currentColumn: smallColumn, gutterType: 'padding', gutter: gridGutter)
    {navPosition} 0
    height 100%
    position fixed
    top 0
    {hideNav} &
      {navPosition} -(smallColumn)%
  // content class
  {contentClass}
    ride-column(width: width, columnCount: 100, currentColumn: contentWidth, gutterType: 'padding', gutter: gridGutter)
    if navPosition == left
      ride-float(width: width, columnCount: 100, currentColumn: smallColumn, floatDirection: navPosition, gutter: gridGutter, gutterType: 'both')
    {hideNav} &
      float none
      unless options.toFull
        margin-{navPosition} unit(smallColumn/2, '%')
      if options.toFull
        margin 0
        ride-column(width: width, columnCount: 100, currentColumn: width, gutterType: 'padding', gutter: gridGutter)


ride-two-columns-reset(class='.site-nav', contentClass='.site-content')
  {class}, {contentClass}
    height auto
    margin 0
    padding 0 2%
    width 96%
    a
      display inline-block

  {contentClass}
    {block}


ride-column-grid(class, columnCount, columnClass = '.cl')
  {class}
    column-count(columnCount)
    {block}
  {class} {columnClass}
    page-break-inside(avoid)
    margin 0
    float none
