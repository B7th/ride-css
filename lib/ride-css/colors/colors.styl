// Ride css. Released under MIT licence.
// https://github.com/ride-css/ride-css/

color-scheme($name, $color, $background-color = false)
  --color-scheme($background-color, $color)
    background-color: $background-color if $background-color not false
    color: $color if $color not false
  if not property
    ${$name}
      --color-scheme: $color, $background-color
  else
      --color-scheme: $name, $color
// get a shade from a color
// similar to Google's material designÂ® pattern for colors
// really useful for setting up your own color schemes faster
color-shade($color, $shade)
  $available-weights = {
    '50': 34, 
    '100': 21, 
    '200': 13, 
    '300': 8, 
    '400': 5, 
    '500': 0, 
    '600': -5, 
    '700': -8, 
    '800': -13, 
    '900': -21,
    '1000': -34
  }
  if $available-weights[$shade]
    lighten($color, $available-weights[$shade])
  else
    $color

// this mixin will return all color shades available using the color-shade mixin
// use like this:
// $purple-shades = set-color-shades(purple)
// $white-shades = set-color-shades(white)
// .foo
//    background-color: $purple-shades['800']
//    color: $white-shades['500']
//
// this mixin could be useful in cycles and for setting up faster your color schemes
set-color-shades($color)
  $shades = {
    '50': color-shade($color, '50'),
    '100': color-shade($color, '100'),
    '200': color-shade($color, '200'),
    '300': color-shade($color, '300'),
    '400': color-shade($color, '400'),
    '500': color-shade($color, '500'),
    '600': color-shade($color, '600'),
    '700': color-shade($color, '700'),
    '800': color-shade($color, '800'),
    '900': color-shade($color, '900'),
    '1000': color-shade($color, '1000')
  }
  $shades