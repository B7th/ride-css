// Ride css. Released under MIT licence.
// https://github.com/ride-css/ride-css/

// if you want a better css3 support you should type "npm install -g nib"

// vendor prefixes
$webkit = '-webkit-'
$mozilla = '-moz-'
$opera = '-o-'
$microsoft = '-ms-'
$allprefixes = $webkit $mozilla $microsoft $opera

// vendor prefixes global usage
$current-prefix = false
$no-prefixes = false
// css proxy core mixin
// will help you to keep your code dry, clean and vendor free
--ride-css-vendor-proxy(prefixes, property, values...)
  if !$no-prefixes and !$current-prefix
    for prefix in prefixes
      {prefix}{property}: values
  if !$current-prefix
    {property}: values
  if $current-prefix
    {$current-prefix}{property}: values

// here comes the sun
// animation
animation(animationShorthand, fillMode = both, direction = forward)
  --ride-css-vendor-proxy($webkit $mozilla $opera, animation, animationShorthand)
  if fillMode != ''
    fill-mode(fillMode)
  if direction != ''
    animation-direction(direction)

// animation-name
animation-name(name)
  --ride-css-vendor-proxy($webkit $mozilla $opera, animation-name, name)

// animation-delay
animation-delay(delay)
  --ride-css-vendor-proxy($webkit $mozilla $opera, animation-delay, delay)

// animation-direction
animation-direction(direction)
  --ride-css-vendor-proxy($webkit $mozilla $opera, animation-direction, direction)

// animation-duration
animation-duration(duration)
  --ride-css-vendor-proxy($webkit $mozilla $opera, animation-duration, duration)

// background-size css property
backface-visibility(visibility = 'hidden')
  --ride-css-vendor-proxy($webkit $mozilla, backface-visibility, visibility)

// background-size css property
background-size(size)
  --ride-css-vendor-proxy($webkit, background-size, size)

// border-radius css property
border-radius(values)
  --ride-css-vendor-proxy($webkit $mozilla, border-radius, values)

// box-shadow
box-shadow(shadows...)
  --ride-css-vendor-proxy($webkit, box-shadow, shadows)

// box-sizing
box-sizing(size = 'border-box')
  --ride-css-vendor-proxy($webkit $mozilla, box-sizing, unquote(size))

// column-count
column-count(count)
  --ride-css-vendor-proxy($webkit $mozilla, column-count, count)

// column-gap
column-gap(gap)
  --ride-css-vendor-proxy($webkit $mozilla, column-gap, gap)

// display
display($display)
  if $display is flex
    {'display'}: -webkit-box;
    {'display'}: -moz-box;
    {'display'}: -ms-flexbox;
    {'display'}: -webkit-flex;
    {'display'}: flex;
  else
    {'display'}: $display

// flex-direction
flex-direction($direction)
  --ride-css-vendor-proxy($webkit, flex-direction, $direction)

// flex-flow
flex-flow($flow)
  --ride-css-vendor-proxy($webkit, flex-flow, $flow)

// fill-mode
fill-mode(mode)
  --ride-css-vendor-proxy($webkit $mozilla $opera, animation-fill-mode, mode)

// matrix
matrix(a, b, c, d, x, y)
  --ride-css-vendor-proxy($allprefixes, transform, unquote(s('matrix(%s,%s,%s,%s,%s,%s)', a, b, c, d, x, y)))

// page-break-inside
page-break-inside(value = avoid)
  --ride-css-vendor-proxy($webkit $mozilla $opera, page-break-inside, value)

// perspective
perspective(value)
  --ride-css-vendor-proxy($webkit $mozilla $opera, perspective, value)

// play-state
play-state(state)
  --ride-css-vendor-proxy($webkit $mozilla $opera, animation-play-state, state)

// rotate css property
rotate(rotation)
  transform(s('rotate(%sdeg)', rotation))

// rotateX
rotateX(rotation)
  transform(s('rotateX(%sdeg)', rotation))

// rotateY
rotateY(rotation)
  transform(s('rotateY(%sdeg)', rotation))

// rotateZ
rotateZ(rotation)
  transform(s('rotateZ(%sdeg)', rotation))

// scale css property
scale(ratio)
  transform(s('scale(%s)', ratio))

// skewX
skewX(degrees)
  transform(s('skewX(%sdeg)', degrees))

// skewY
skewY(degrees)
  transform(s('skewY(%sdeg)', degrees))

// skew
skew(degrees...)
  transform(s('skew(%sdeg, %sdeg)', degrees...))

// tab-size
tab-size(size)
  --ride-css-vendor-proxy($mozilla $opera, tab-size, size)

// text-selection
text-selection(background, color)
  &::selection
    background-color: background
    color: color
  &::{$mozilla}selection
    background-color: background
    color: color

// transition
transition(time = .4s, easing = ease-out, transitions = all)
  --ride-css-vendor-proxy($webkit $mozilla $opera, transition, transitions time easing)

// transitions
transitions()
  --ride-css-vendor-proxy($webkit $mozilla $opera, transition, unquote(join(', ', arguments)))

// translate css property
translate(x, y)
  transform(s('translate(%s, %s)', x, y))

// translateX
translateX(x)
  transform(s('translateX(%s)', x))

// translateY
translateY(x)
  transform(s('translateY(%s)', x))

// transform css property
transform(transformations...)
  --ride-css-vendor-proxy($allprefixes, transform, unquote(transformations))

// transform origin css property
transform-origin(transformations...)
  --ride-css-vendor-proxy($allprefixes, transform-origin, transformations)