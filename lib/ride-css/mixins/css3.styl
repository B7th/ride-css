// copyright 2015 @ Paolo Roth <iamoctod@gmail.com>
// MIT licenced

$gecko = -moz-
$presto = -o-
$trident = -ms-
$webkit = -webkit-

// shorthand for css3 animation
// @param [ident] $animation is the animation
// @return [css]
animation($animation)
  {$webkit}animation: $animation
  animation: $animation

// shorthand for css3 backface-visibility
// @param [ident] $backface-visibility is the backface-visibility
// @return [css]
backface-visibility($backface-visibility = visible)
  {$webkit}backface-visibility: $backface-visibility
  {$gecko}backface-visibility: $backface-visibility
  backface-visibility: $backface-visibility

// shorthand for css3 border-radius
// @param [ident] $border-radius is the border-radius
// @return [css]
border-radius($border-radius)
  {$webkit}border-radius: $border-radius
  border-radius: $border-radius

// shorthand for css3 box-shadow
// @param [ident] $box-shadow is the box-shadow
// @return [css]
box-shadow($box-shadow)
  {$webkit}box-shadow: $box-shadow
  box-shadow: $box-shadow

// this mixin will make the selector's text unselectable by default
// @param [boolean] $cache setting this param to false, the css yelded by this mixin will not be cached
// @return [css]
dont-select($cache = true)
  if $cache
    +cache('ride-dont-select'+ current-media())
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
  else
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;  

// shorthand for css3 matrix
// @return [css]
matrix()
  if current-property[0] is 'matrix'
    transform: s('matrix(%s)', arguments)
  else
     s('matrix(%s)', arguments)

// shorthand for css3 scaling
// @param [number] $scaling is the scaling
// @return [css]
scale($scaling)
  if current-property[0] is 'scale'
    transform: s('scale(%s)', $scaling)
  else
     s('scale(%s)', $scaling)

// shorthand for css3 translating
// @return [css]
translate()
  if current-property[0] is 'translate'
    transform: s('translate(%s)', arguments)
  else
     s('translate(%s)', arguments)

// shorthand for css3 translating (X axis)
// @param $x-axis is the translating value
// @return [css]
translateX($x-axis)
  if current-property[0] is 'translateX'
    transform: s('translateX(%s)', $x-axis)
  else
     s('translateX(%s)', $x-axis)

// shorthand for css3 translating (Y axis)
// @param $y-axis is the translating value
// @return [css]
translateY($y-axis)
  if current-property[0] is 'translateY'
    transform: s('translateY(%s)', $y-axis)
  else
     s('translateY(%s)', $y-axis)

// shorthand for prefixing your css transforms
// @return [css]
transform()
  {$webkit}transform: arguments
  {$trident}transform: arguments
  transform: arguments
