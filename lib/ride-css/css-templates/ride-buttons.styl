// Ride css. Released under MIT licence.
// https://github.com/OctoD/ride-css/
// common button template
button()
  {block}
  +cache('ride-button')
    dont-select()
    cursor pointer unless @cursor
    display inline-block unless @display
    line-height 3 unless @line-height
    padding .5em 1em unless @padding
    position relative unless @position
    white-space nowrap unless @white-space

menu-button($class = '.hamburger', $trigger-event = '.show-menu .hamburger')
  {$class}
    {block}
    background-color white unless @background-color
    border-radius .25em
    display inline-block
    height .25em
    transition all .4s ease 0s
    width 2em
    &:after
    &:before
      background-color @background-color
      content ""
      display unquote('block') // had to do this due to a Stylus bug. (the block value is rendered as a stylus block)
      height @height
      position relative
    &:before
      margin-top -(@height*2)
      transition all .4s ease 0s
    &:after
      margin-top (@height*2)
      top @height
      transition all .4s ease 0s

  {$class}
  {$class}:after
  {$class}:before
    border-radius .25em
  
  {$trigger-event}
    background-color transparent
    &:after
      rotate -45
      transform-origin 0 50% 0
    &:before
      rotate 45
      transform-origin 25% 0 0


sliding-button($class, $direction = 'left', $transition = .4s, $config = {})
  $config.oocss = $config.oocss || false
  $moving-thing = ':before'
  if $config.oocss == true
    $moving-thing = $config.hover || '.hover'
    $moving-thing = ' '+ $moving-thing
  {$class}
    {block}
    button()
    overflow hidden
    z-index 1
    &:hover{$moving-thing}
      if $direction == 'left' || $direction == 'right'
        translateX(0)
      if $direction == 'top' || $direction == 'bottom'
        translateY(0)
    &{$moving-thing}
      if $direction == 'top'
        translateY(-100%)
      if $direction == 'right'
        translateX(100%)
      if $direction == 'bottom'
        translateY(100%)
      if $direction == 'left'
        translateX(-100%)
      absolute(top: 0, left: 0)
      content ''
      height 100%
      width 100%
      z-index -1

  {$class}
  {$class}{$moving-thing}
    transition $transition