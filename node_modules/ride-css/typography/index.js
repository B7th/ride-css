// Ride css. Released under MIT licence.
// https://github.com/OctoD/ride-css/
var calculateTypography
  , getFontSize
  , getHeadings
  , getLineHeight
  , getParagraph
  , setLineHeightCalculation; 

// constructor object
function Typography (fontSize, lineHeight) {
  this.fontSize = fontSize;
  this.lineHeight = lineHeight;
}
// the function wich will calculate the font-size, line-height and margin
calculateTypography = function (fontSizeArray, boolAddMargin) {
  var self = this;

  fontSizeArray = fontSizeArray.map(function (value, offset) {
    var lineHeight = self.lineHeight / value
      , margin = 0;

    if (boolAddMargin) {
      margin = lineHeight - value;
    }

    return {
      fontSize: parseFloat(value),
      lineHeight: parseFloat(lineHeight),
      margin: parseFloat(margin)
    }
  });

  return fontSizeArray;
}

getFontSize = function () {
  return this.fontSize;
}

getHeadings = function (boolAddMargin) {
  return this.calculateTypography(this.fontSize, boolAddMargin);
}

getLineHeight = function () {
  return this.lineHeight;
}

getParagraph = function () {
  return this.calculateTypography(this.fontSize, true);
}

setLineHeightCalculation = function (lineHeight) {
  this.lineHeight = formula.call(this, this.fontSize);
  return this;
}

Typography.prototype = {
  calculateTypography: calculateTypography,
  getFontSize: getFontSize,
  getHeadings: getHeadings,
  getLineHeight: getLineHeight,
  getParagraph: getParagraph,
  lineHeightFormula: setLineHeightCalculation
}

module.exports = Typography