var _typography
  , calculateTypography
  , getFontSize
  , getHeadings
  , getLineHeight
  , getParagraph
  , setLineHeightCalculation; 


_typography = module.exports = function Typography (fontSize) {
  this.fontSize = fontSize;
  this.lineHeight = 1.5;
}

calculateTypography = function (typoArray, boolAddMargin) {
  var self = this;

  typoArray = typoArray.map(function (value, offset) {
    var lineHeight = self.lineHeight / value
      , margin = 0;

    if (boolAddMargin) {
      margin = lineHeight - value;
    }

    return {
      fontSize: value,
      lineHeight: lineHeight,
      margin: margin
    }
  });

  return typoArray; 
}

getFontSize = function () {
  return this.fontSize;
}

getHeadings = function (headings, boolAddMargin) {
  return this.calculateTypography(headings, boolAddMargin);
}

getLineHeight = function () {
  return this.lineHeight;
}

getParagraph = function () {
  return this.calculateTypography([1], true);
}

setLineHeightCalculation = function (lineHeight) {
  this.lineHeight = formula;
  return this;
}

_typography.prototype = {
  calculateTypography: calculateTypography,
  getFontSize: getFontSize,
  getHeadings: getHeadings,
  getLineHeight: getLineHeight,
  getParagraph: getParagraph,
  lineHeightFormula: setLineHeightCalculation
}